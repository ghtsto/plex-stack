version: '3'

services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    command: --cleanup --label-enable
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  traefik:
    container_name: traefik
    image: traefik
    command: --configFile=/config/traefik.toml
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik:/config
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.traefik-redirect.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik-redirect.middlewares=redirect@file"
      - "traefik.http.routers.traefik.middlewares=auth@file"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=default"
      - "traefik.http.routers.traefik.tls=true"
    environment:
      - DOMAIN=${DOMAIN}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}

  portainer:
    container_name: portainer
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.portainer-redirect.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer-redirect.middlewares=redirect@file"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  plexdrive:
    container_name: plexdrive
    image: ghtsto/plexdrive-encfs
    volumes:
      - plexdrive:/config
      - ./plexdrive/unionfs:/unionfs:shared
      - ./plexdrive/local-encrypted:/local-encrypted
      - encfs:/encfs
    privileged: true
    devices:
      - /dev/fuse
    cap_add:
      - MKNOD
      - SYS_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEXDRIVE_OPTS=${PLEXDRIVE_OPTS}

  tautulli:
    container_name: tautulli
    image: tautulli/tautulli
    volumes:
      - tautulli:/config
      - plex-config:/plex_logs:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.tautulli-redirect.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.routers.tautulli-redirect.middlewares=redirect@file"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.routers.tautulli.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  ombi:
    container_name: ombi
    image: linuxserver/ombi
    volumes:
      - ombi:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.ombi-redirect.rule=Host(`requests.${DOMAIN}`)"
      - "traefik.http.routers.ombi-redirect.middlewares=redirect@file"
      - "traefik.http.routers.ombi.rule=Host(`requests.${DOMAIN}`)"
      - "traefik.http.routers.ombi.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    volumes:
      - sonarr:/config
      - ./plexdrive/unionfs:/unionfs
      - sabnzbd-downloads:/sabnzbd
      - deluge-downloads:/deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.sonarr-redirect.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  organizr:
    container_name: organizr
    image: organizrtools/organizr-v2
    volumes:
      - organizr:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.organizr-redirect.rule=Host(`organizr.${DOMAIN}`)"
      - "traefik.http.routers.organizr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.organizr.rule=Host(`organizr.${DOMAIN}`)"
      - "traefik.http.routers.organizr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd
    volumes:
      - sabnzbd-config:/config
      - sabnzbd-downloads:/downloads
      - sabnzbd-incomplete:/incomplete-downloads
    hostname: sabnzbd.${DOMAIN}
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.sabnzbd-redirect.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd-redirect.middlewares=redirect@file"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  deluge:
    container_name: deluge
    image: linuxserver/deluge
    ports:
      - "58946:58946"
    volumes:
      - deluge-config:/config
      - deluge-downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.deluge-redirect.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.routers.deluge-redirect.middlewares=redirect@file"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.routers.deluge.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    volumes:
      - jackett-config:/config
      - jackett-downloads:/downloads
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.jackett-redirect.rule=Host(`jackett.${DOMAIN}`)"
      - "traefik.http.routers.jackett-redirect.middlewares=redirect@file"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
      - "traefik.http.routers.jackett.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    volumes:
      - radarr:/config
      - ./plexdrive/unionfs:/unionfs
      - sabnzbd-downloads:/sabnzbd
      - deluge-downloads:/deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.radarr-redirect.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr
    volumes:
      - lidarr:/config
      - ./plexdrive/unionfs/music:/music
      - deluge-downloads:/downloads
      - sabnzbd-downloads:/sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.lidarr-redirect.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    volumes:
      - plex-config:/config
      - plex-transcode:/transcode
      - ./plexdrive/unionfs:/unionfs
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=http://plex.${DOMAIN}:80,https://plex.${DOMAIN}:443
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "com.centurylinklabs.watchtower.enable=true"

  rclone:
    container_name: rclone
    image: ghtsto/rclone-encfs-cron
    volumes:
      - rclone-config:/config
      - rclone-logs:/logs
      - ./plexdrive/unionfs:/unionfs
      - ./plexdrive/local-encrypted:/local-encrypted
      - encfs:/encfs
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

networks:
  default:
    external:
      name: ${COMPOSE_PROJECT_NAME}

volumes:
  deluge-config:
  deluge-downloads:
  encfs:
  jackett-config:
  jackett-downloads:
  lidarr:
  ombi:
  organizr:
  plex-config:
  plex-transcode:
  portainer:
  radarr:
  rclone-config:
  rclone-logs:
  sabnzbd-config:
  sabnzbd-downloads:
  sabnzbd-incomplete:
  sonarr:
  tautulli:
  traefik:
  plexdrive:
