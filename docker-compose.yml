version: '3'

services:
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    command: --cleanup --label-enable
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/watchtower/config.json:/config.json:ro
    networks:
      - web
  
  traefik:
    container_name: traefik
    image: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/traefik/traefik.toml:/traefik.toml
      - ${DATA_DIR}/traefik/dynamic_conf.toml:/dynamic_conf.toml
      - ${DATA_DIR}/acme/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.traefik-redirect.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik-redirect.middlewares=redirect@file"
      - "traefik.http.routers.traefik.middlewares=auth@file"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=default"
      - "traefik.http.routers.traefik.tls=true"
    networks:
      - web
    environment:
      - DOMAIN=${DOMAIN}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}

  portainer:
    container_name: portainer
    image: portainer/portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/portainer:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.portainer-redirect.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer-redirect.middlewares=redirect@file"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)"
      - "traefik.http.routers.portainer.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - web

  plexdrive:
    container_name: plexdrive
    image: ghtsto/plexdrive-encfs
    restart: always
    volumes:
      - ${DATA_DIR}/plexdrive/config:/config
      - ${DATA_DIR}/plexdrive/cache:/cache
      - ${DATA_DIR}/plexdrive/data:/data:shared
      - ${DATA_DIR}/plexdrive/local-encrypted:/local
      - ${DATA_DIR}/plexdrive/encfs.xml:/encfs.xml
      - ${DATA_DIR}/plexdrive/encfspass:/encfspass
    privileged: true
    devices:
      - /dev/fuse
    cap_add:
      - MKNOD
      - SYS_ADMIN
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEXDRIVE_OPTS=${PLEXDRIVE_OPTS}

  tautulli:
    container_name: tautulli
    image: tautulli/tautulli
    restart: always
    volumes:
      - ${DATA_DIR}/tautulli/config:/config
      - "${DATA_DIR}/plex/config/Library/Application Support/Plex Media Server/Logs/:/plex_logs"
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.tautulli-redirect.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.routers.tautulli-redirect.middlewares=redirect@file"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.routers.tautulli.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  ombi:
    container_name: ombi
    image: linuxserver/ombi
    restart: always
    volumes:
      - ${DATA_DIR}/ombi/config:/config
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.ombi-redirect.rule=Host(`ombi.${DOMAIN}`)"
      - "traefik.http.routers.ombi-redirect.middlewares=redirect@file"
      - "traefik.http.routers.ombi.rule=Host(`ombi.${DOMAIN}`)"
      - "traefik.http.routers.ombi.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    restart: always
    volumes:
      - ${DATA_DIR}/sonarr/config:/config
      - ${DATA_DIR}/plexdrive/data:/data
      - ${DATA_DIR}/sabnzbd/tmp:/sabnzbd
      - ${DATA_DIR}/deluge/tmp:/deluge
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.sonarr-redirect.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  organizr:
    container_name: organizr
    image: organizrtools/organizr-v2
    restart: always
    volumes:
      - ${DATA_DIR}/organizr/config:/config
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.organizr-redirect.rule=Host(`organizr.${DOMAIN}`)"
      - "traefik.http.routers.organizr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.organizr.rule=Host(`organizr.${DOMAIN}`)"
      - "traefik.http.routers.organizr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  sabnzbd:
    container_name: sabnzbd
    image: linuxserver/sabnzbd
    restart: always
    volumes:
      - ${DATA_DIR}/sabnzbd/config:/config
      - ${DATA_DIR}/sabnzbd/tmp/downloads:/downloads
      - ${DATA_DIR}/sabnzbd/tmp/incomplete-downloads:/incomplete-downloads
    hostname: sabnzbd.${DOMAIN}
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.sabnzbd-redirect.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd-redirect.middlewares=redirect@file"
      - "traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)"
      - "traefik.http.routers.sabnzbd.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  deluge:
    container_name: deluge
    image: linuxserver/deluge
    restart: always
    volumes:
      - ${DATA_DIR}/deluge/config:/config
      - ${DATA_DIR}/deluge/tmp/downloads:/downloads
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.deluge-redirect.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.routers.deluge-redirect.middlewares=redirect@file"
      - "traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)"
      - "traefik.http.routers.deluge.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    restart: always
    volumes:
      - ${DATA_DIR}/jackett/config:/config
      - ${DATA_DIR}/jackett/tmp/downloads:/downloads
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.jackett-redirect.rule=Host(`jackett.${DOMAIN}`)"
      - "traefik.http.routers.jackett-redirect.middlewares=redirect@file"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
      - "traefik.http.routers.jackett.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: always
    volumes:
      - ${DATA_DIR}/radarr/config:/config
      - ${DATA_DIR}/plexdrive/data:/data
      - ${DATA_DIR}/sabnzbd/tmp:/sabnzbd
      - ${DATA_DIR}/deluge/tmp:/deluge
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.radarr-redirect.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr
    restart: always
    volumes:
      - ${DATA_DIR}/lidarr/config:/config
      - ${DATA_DIR}/plexdrive/data:/data
      - ${DATA_DIR}/sabnzbd/tmp:/sabnzbd
      - ${DATA_DIR}/deluge/tmp:/deluge
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.lidarr-redirect.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr-redirect.middlewares=redirect@file"
      - "traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)"
      - "traefik.http.routers.lidarr.tls=true"
      - "com.centurylinklabs.watchtower.enable=true"

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    volumes:
      - ${DATA_DIR}/plex/config:/config
      - ${DATA_DIR}/plex/transcode:/transcode
      - ${DATA_DIR}/plexdrive/data:/data
    networks:
      - web
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=http://plex.${DOMAIN}:80,https://plex.${DOMAIN}:443
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "com.centurylinklabs.watchtower.enable=true"

  rclone:
    container_name: rclone
    image: ghtsto/rclone-encfs-cron
    volumes:
      - ${DATA_DIR}/rclone/config:/config
      - ${DATA_DIR}/rclone/cron/daily:/etc/cron.daily
      - ${DATA_DIR}/rclone/cron/minute:/etc/cron.minute
      - ${DATA_DIR}/plexdrive/data:/data
      - ${DATA_DIR}/plexdrive/local-encrypted:/local
      - ${DATA_DIR}/plexdrive/encfs.xml:/encfs.xml
      - ${DATA_DIR}/plexdrive/encfspass:/encfspass
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - web

networks:
  web:
    external: true
